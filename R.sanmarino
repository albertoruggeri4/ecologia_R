# codice per analisi dei pattern legati ai punti

install.packages("ggplot2")
install.packages("spatstat")

library(ggplot2) # comando alternativo require(ggplot2)
library(spatstat)

setwd("~/lab")
# setwd("/Users/utente/lab") #mac
# setwd("C:/lab/") # windows

# importare dati
covid <- read.table("covid_agg.csv", head=T)

head(covid)

plot(covid$country,covid$cases) 
# attach(covid) 
# plot(country,cases)

plot(covid$country,covid$cases,las=0) # parallel labels
plot(covid$country,covid$cases,las=1) # horizontal labels
plot(covid$country,covid$cases,las=2) # perpendicular labels
plot(covid$country,covid$cases,las=3) # vertical labels

plot(covid$country,covid$cases,las=3,cex.lab=0.5, cex.axis=0.5) # vertical labels


# ggplot2
data(mpg)
head(mpg)

# data
# aes
# tipo di geometria
ggplot(mpg,aes(x=displ,y=hwy)) + geom_point()
ggplot(mpg,aes(x=displ,y=hwy)) + geom_line()
ggplot(mpg,aes(x=displ,y=hwy)) + geom_polygon()

# ggplot di covid
ggplot(covid,aes(x=lon,y=lat,size=cases)) + geom_point()

# density
# create dataset for spatstat
attach(covid)
covids <- ppp(lon, lat, c(-180,180), c(-90,90))

d <- density(covids)

plot(d)
points(covids)

# save the .RData

setwd("~/lab")
load("point_pattern.RData")

ls()

plot(d)
# palette
cl <- colorRampPalette(c('yellow','orange','red')) (100)
plot(d, col=cl)

# Exercise
# plot della mappa della densità dal verde al blu

points(covids)


install.packages("rgdal")
library(rgdal)

coastlines <- readOGR("ne_10m_coastline.shp")

plot(coastlines, add=T)

# Exercise: plot della mappa di densità con una nuova colorazione, e aggiunta delle coastlines
cl <- colorRampPalette(c('blue','light blue','light green','yellow')) (100)
plot(d, col=cl)
plot(coastlines, add=T, col="yellow")

cl2 <- colorRampPalette(c('red','orange','yellow','green', 'blue')) (800)
plot(d, col=cl2)
plot(coastlines, add=T)

cl3 <- colorRampPalette(c('green', 'violet', 'blue')) (200)
plot(d, col=cl3)
plot(coastlines, add=T)

cl4 <- colorRampPalette(c('violet','yellow','green'))(100)
plot(d, col=cl4)
plot(coastlines, add=T)

cl5 <- colorRampPalette(c('darkcyan', 'purple', 'red')) (200) 
plot(d, col=cl5)
plot(coastlines, add=T)

cl6 <- colorRampPalette(c('darkcyan', 'purple', 'red')) (200) 
plot(d, col=cl6)
plot(coastlines, add=T)

cl7<-colorRampPalette(c('white','blue','green','red','orange','yellow')) (150)
plot(d, col=cl7)
plot(coastlines, add=T)


### Exercise: caricare il workspace point_pattern.RData (load("...")) e crare un garfico della mappa di densità

library(spatstat)
library(rgdal) # for the coastlines

setwd("~/lab/")
load("point_pattern.RData")
ls()

cl5 <- colorRampPalette(c('cyan', 'purple', 'red')) (200) 
plot(d, col=cl5, main="
")
points(covids)
coastlines <- readOGR("ne_10m_coastline.shp")
plot(coastlines, add=T)

# interpolazione

head(covid)
marks(covids) <- covid$cases
s <- Smooth(covids)
plot(s)

# Exercise: plot(s) with points and coastlines
cl5 <- colorRampPalette(c('cyan', 'purple', 'red')) (200) 
plot(s, col=cl5, main="estimate of cases")
points(covids)
coastlines <- readOGR("ne_10m_coastline.shp")
plot(coastlines, add=T)

text(covids)

##### mappa finale
par(mfrow=c(2,1))

# densità
cl5 <- colorRampPalette(c('cyan', 'purple', 'red')) (200) 
plot(d, col=cl5, main="
")
points(covids)
coastlines <- readOGR("ne_10m_coastline.shp")
plot(coastlines, add=T)

# interpolazione del numero di casi
cl5 <- colorRampPalette(c('cyan', 'purple', 'red')) (200) 
plot(s, col=cl5, main="estimate of cases")
points(covids)
coastlines <- readOGR("ne_10m_coastline.shp")
plot(coastlines, add=T)

###### San Marino 
# setwd("~/lab/")
# library(spatstat)

load("Tesi.RData")
ls()

head(Tesi)
attach(Tesi)

summary(Tesi)

# x varia da 12.42 a 12.46
# y varia da 43.91 a 43.94
# point pattern: x,y,c(xmin,xmax),c(ymin,ymax)
Tesippp <- ppp(Longitude, Latitude, c(12.41,12.47), c(43.9,43.95))

dT <- density(Tesippp)

plot(dT)
points(Tesippp, col="green")

colors()


setwd("C:/lab/")

load("sanmarino.RData")  


#per controllare il file sanmarino
#dt=sensity map, Tesi= dataset orignale, Tesi_ppp=point pattern

#per vedere la mappa di densità
library(spatsat)

plot(dT)
points(Tesippp, col='green')

head(Tesi)

#andremo ad utilizzare la funzione mark, che associa la funzione che vogliamo interpolare alla point patterns
#andiamo dentro il dataset Tesi con il dollaro attacchiamo un altro dato ( in questo caso dello stesso dataset)
marks(Tesippp) <- Tesi$Species_richness

#per avere le descrizione delle funzione ?<nome.funz> o mettere direttamente il nome
#ex.  ?Smooth or ?plot --- Smooth è una funzione che va a trovare il dato medio lì dove non c'è

#stima valori dove non sono stati associati
interpol <- Smooth(Tesippp)

#v.d. wiki gdal (per R rgdal) o osgeo gdal per infor
#funzione read OGR 
library(rgdal)
sanmarino <- readOGR("San_Marino.shp")

#per vedere lo shape poligono
plot(sanmarino)
#mettendo add=T aggiungiamo pezzi alla mappa precedente
plot(interpol, add=T)

#per mettere i punti
points(Tesippp,col="green")

#Exercise: plot multiframe di densità e interpolazione. La c è per unire un array
par(mfrow=c(2,1))

plot(dT, main="Density of points")
points(Tesippp,col="green")

plot(interpol, main="Estimate of species richness")
points(Tesippp, col="green")

#exercise plot multiframe di densità e ointerpolazione uno accanto all'altro
par(mfrow=c(1,2))

plot(dT, main="Density of points")
points(Tesippp,col="green")

plot(interpol, main="Estimate of species richness")
points(Tesippp, col="green")
